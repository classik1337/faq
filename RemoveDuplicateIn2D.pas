program RemoveDuplicate;                                //название программы
var i,j,k,g,n,m,d:integer;                              //для переменных i,j,k,g,n,m,d задаем тип цифры
    a,b:array[1..100,1..100] of integer;                //для переменных a,b задаем тип двумерный массив(с максимально возможным размером 100x100) P.S Переменные a и b являются ДВУМЕРНЫМИ ЦИФЕРНЫМИ массивами с размерами 100 на 100
    f:boolean;                                          //для переменной f задаем тип логический

begin                                                   //начало программы
  write('Введите количество строк: ');                  //выводим текст
  readln(n);                                            //вводим значение переменной отвечающую за количество строк в массиве
  write('Введите количество столбцов: ');               //выводим текст
  readln(m);                                            //вводим значение переменной отвечающую за количество столбцов в массиве 

  for i:=1 to n do begin                                //(1) для каждой строки в массиве... P.S Пробегаемся по строчкам...
    for j:=1 to m do begin                              //(2) для каждого столбца в массиве... P.S ... и столбцам в изначальном массиве(массив a)
      write('Значение элемента [', i, ';', j, ']: ');   //выводим текст
      readln(a[i,j]);                                   //вводим значение элемента на позиции i(номер строки), j(номер столбца)
    end;                                                //(1) конец цикла
  end;                                                  //(2) конец цикла

  b[1,1] := a[1,1];                                     //на первую позицию массива b присваиваем значеие лежащее на первой позиции в массиве a P.S так как в массиве b еще нет значений
  d := 1;                                               //присваиваем переменной d значение 1 P.S для обозночения количества элементов в массиве b
  for i:=1 to n do begin                                //(1) для каждой строки в изначальном массиве...
    for j:=1 to m do begin                              //(2) для каждого столбца в изначальном массиве...
      f:=true;                                          //изначально мы будем добавлять значение в массив b
      for k:=1 to n do begin                            //(3) для каждой строки в новом массиве... P.S Пробегаемся по строчкам...
        for g:=2 to d do begin                          //(4) для каждого столбца в новом массиве... P.S ... и столбцам в новом массиве(массиве b)
          if a[i,j] = b[k,g] then                       //если значение элемента в массиве a на позиции i,j равно значению элемента в массиве b на позиции k,g, то... P.S если значение в массиве a совпадает со значением из массива b, то...
            f:=false;                                   //присваиваем переменной f значение False P.S что означает что мы не будем добавлять это значение в массив b, так как оно у нас уже имеется
        end;                                            //(4) конец цикла
      end;                                              //(3) конец цикла
      if f then begin                                   //если значение переменной f равно True, то...
        d:=d+1;                                         //к переменной d прибавляем единицу P.S к счетчику количества значений в массиве b добавляем единицу
        b[k,g] := a[i,j]                                //на позицию k,g в массиве b присваиваем значение элемента на позиции i,j в массиве a P.S и добавляем в массив b значение из массива a
      end;                                              //конец условия
    end;                                                //(2) конец цикла
  end;                                                  //(1) конец цикла
  
  writeln();                                            //выводим пустую строку
  writeln('Исходный массив:');                          //выводим текст
  for i:=1 to n do begin                                //для каждой строки в изначальном массиве... P.S Пробегаемся по строчкам...
    for j:=1 to m do                                    //для каждого столбца в изначальном массиве... P.S ... и столбцам в изначальном массиве(массиве a)
      write(a[i,j], ' ');                               //выводим элемент на позиции i,j в массиве a и ставим пробел
    writeln();                                          //выводми пустую строку
  end;                                                  //конец цикла
  
  writeln();                                            //выводим пустую строку...
  writeln('Массив без дубликатов:');                    //выводим текст
  f:=false;                                             //переменной f присваиваем значение false P.S Переменная f обозначает что ноль мы еще не выводился
  for i:=1 to n do begin                                //(1) для каждой строки в новом массиве... P.S Пробегаемся по строчкам...
    for j:=1 to d do begin                              //(2) для каждого столбца в новом массиве... P.S ... и столбцам в новом массиве(массиве b)
      if not (b[i,j] = 0) then begin                    //(3) если текущий элемент не ноль, то...
        write(b[i,j], ' ');                             //выводим элемент на позиции i,j в массиве b и ставим пробел
      end                                               //(3) конец условия
      else begin                                        //иначе...
        if ((b[i,j] = 0) and not (f)) then begin        //(4) если текущий элемент ноль и он ни разу не выводился...
          f:=true;                                      //присваиваем переменной f значение true P.S означает что нолик мы вывели
          write(b[i,j], ' ');                           //выводим элемент на позиции i,j в массиве b и ставим пробел
        end;                                            //(4) конец условия
      end;                                              //конец всех условий
    end;                                                //(2) конец цикла
    writeln();                                          //выводим пустую строку
  end;                                                  //(1) конец цикла
end.                                                    //конец программы
